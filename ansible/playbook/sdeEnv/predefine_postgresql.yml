---
  - name: Define Short Postgresql Version for 9.6 or higher
    set_fact:
      path_version: "-"
      postgresql_version_without_dot: "{{ postgresql_version.split('.')[0] }}{{ postgresql_version.split('.')[1] }}"
    when: postgresql_version is defined and postgresql_version != "9.2"

  - name: Define Short Postgresql Version for 9.2 old version
    set_fact:
      path_version: ""
      postgresql_version_without_dot: ""
    when: postgresql_version is not defined or postgresql_version == "9.2"

  - name: Define Postgresql dat and config folder for 9.6 or higher
    set_fact:
      postgresql_data_dir: "/var/lib/pgsql/{{ postgresql_version }}/data"
      postgresql_config_path: "/var/lib/pgsql/{{ postgresql_version }}/data"
    when: 
      - ansible_os_family == "RedHat" 
      - postgresql_version is defined and postgresql_version != "9.2"

  - name: Define Postgresql variables
    set_fact:   
      postgresql_daemon: "postgresql{{ path_version }}{{ postgresql_version_without_dot }}"
      postgresql_packages:
        - "postgresql{{ postgresql_version_without_dot }}"
        - "postgresql{{ postgresql_version_without_dot }}-server"
        - "postgresql{{ postgresql_version_without_dot }}-contrib"
      postgresql_hba_entries:
#        - { type: local, database: all, user: postgres, auth_method: md5 }
        - { type: local, database: all, user: all, auth_method: trust }
        - { type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: md5 }
        - { type: host, database: all, user: all, address: '::1/128', auth_method: md5 }
      postgresql_daemon: "postgresql{{ path_version }}{{ postgresql_version }}"
      postgresql_bin_path: "/usr/pgsql{{ path_version }}{{ postgresql_version }}/bin"

  - name: Install the repository RPM of PostgreSQL 9.6 or higher
    shell: |
      isExist=`rpm -qa | grep pgdg`
      if [ "${isExist}" == "" ]; then
        yum install -y "https://download.postgresql.org/pub/repos/yum/reporpms/EL-{{ ansible_distribution_version.split('.')[0] }}-x86_64/pgdg-redhat-repo-latest.noarch.rpm"
      fi
    ignore_errors: yes
    when: 
      - ansible_os_family == "RedHat" 
      - postgresql_version is defined and postgresql_version != "9.2"
