---
  - name: Define variables for Redmine
    set_fact:
      redmine_version: 4.2.1
      redmine_http_port: 80
      redmine_username: redmine
      redmine_password: redmine
      redmine_database_name: redmine
      remmine_database_host: localhost
      ruby_version: 2.7.3
      rubygems_version: 3.1.4

  - name: Define variables for Redmine
    set_fact:
      src_folder: "/usr/local/src"
      redmine_home: "/home/{{redmine_username}}/redmine-{{ redmine_version }}" 
      redmine_nginx_home: "/opt/ngnix" 
      redmine_nginx_service_path: "/usr/lib/systemd/system" 

  - name: Define variables for Build Sources
    set_fact:
      build_sources:
        - url: "http://cache.ruby-lang.org/pub/ruby/{{ ruby_version.split('.')[0] }}.{{ ruby_version.split('.')[1] }}/ruby-{{ ruby_version }}.tar.gz"
          dest: "{{ src_folder }}"
          chdir: "{{ src_folder }}/ruby-{{ ruby_version }}"
          cmd: "./configure --disable-install-doc; make && make install"
        - url: "https://rubygems.org/rubygems/rubygems-{{ rubygems_version}}.tgz" 
          dest: "{{ src_folder }}" 
          chdir: "{{ src_folder }}/rubygems-{{ rubygems_version}}"
          cmd: "/usr/local/bin/ruby setup.rb"
        - url: "https://www.redmine.org/releases/redmine-{{ redmine_version }}.tar.gz"
          dest: "/home/{{ redmine_username }}"
          owner: "redmine"

  - name: Define variables for MariaDB
    set_fact:
      mariadb_root_password: "password"
      mariadb_databases:
        - { name: "{{ redmine_database_name }}", encoding: utf8, collation: utf8_general_ci }
      mariadb_users:
        - { name: "{{ redmine_username }}", password: "{{ redmine_password }}", host: "%", priv: "{{ redmine_username }}.*:ALL" }

  - name: Open Redmine Http port
    include_tasks: "{{sdePath}}/open_firewall.yml"
    vars:
      work_name: "Redmine"
      port_info:
        - { protocol: "http", port: "service" }
        - { protocol: "https", port: "service" }
        - { protocol: "tcp", port: "{{ redmine_http_port }}" }

  - name: Install package dependencies.
    shell: "yum install -y {{ item }}"
    with_items:
      - "gcc g++ cpp gcc-c++"
      - "openssl-devel readline-devel zlib-devel curl-devel libyaml-devel"
      - "ImageMagick ImageMagick-devel"

  - name: Redmine user
    user:
      name: "{{ redmine_username }}"

  - name: Install MariaDB Roles
    include_role:
      name: "{{ rolevar }}"
    loop:
      - "{{ rolesPath }}/bertvv.mariadb"
    loop_control:
      loop_var: rolevar

  - name: Download Build Source
    ansible.builtin.unarchive:
      src: "{{ item.url }}"
      dest: "{{ item.dest }}"
      remote_src: yes
      owner: "{{ item.owner | default('root') }}"
    with_items: "{{ build_sources }}"

  - name: Compile and Setup 
    ansible.builtin.shell: 
      cmd: "{{ item.cmd }}"
      chdir: "{{ item.chdir }}"
    become_user: "{{ item.owner | default('root') }}"
    when: item.cmd is defined
    with_items: "{{ build_sources }}"

  - name: Install Ruby Gems
    ansible.builtin.shell: "gem install {{ item }}"
    with_items: 
      - "bundler ruby-shadow" 
      - "rails -V"
      - "passenger -no-ri -no-rdoc"

  - name: Template a file to Redmine Config
    ansible.builtin.template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: "{{ redmine_username | default('root') }}"
    with_items: 
      - { src: "{{ sdePath }}/templates/redmine.conf.j2", dest: "{{ redmine_home }}/config/configuration.yml", owner: "{{ redmine_username }}" }
      - { src: "{{ sdePath }}/templates/redmine-database.conf.j2", dest: "{{ redmine_home }}/config/database.yml", owner: "{{ redmine_username }}" }

  - name: Install bundle
    ansible.builtin.shell:
      cmd: "{{ item }}"
      chdir: "{{ redmine_home }}"
    become_user: "{{ redmine_username }}"
    with_items: 
      - "bundle install --without development test --path vendor/bundle"
      - "bundle exec rake generate_secret_token"
      - "RAILS_ENV=production bundle exec rake db:migrate"
      - "bundle exec rake redmine:load_default_data RAILS_ENV=production REDMINE_LANG=ko"

  - name: Install passenger nginx module
    ansible.builtin.shell: 
      cmd: "passenger-install-nginx-module --auto"

  - name: Make Nginx Redmine Config folder 
    shell: "mkdir -p {{ redmine_nginx_home }}/conf/host"

  - name: Template a file to Nginx
    ansible.builtin.template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    with_items: 
      - { src: "{{ sdePath }}/templates/redmine-nginx.conf.j2", dest: "{{ redmine_nginx_home }}/conf/host/redmine.conf", owner: "{{ redmine_username }}" }
      - { src: "{{ sdePath }}/templates/redmine-nginx-service.conf.j2", dest: "{{ redmine_nginx_service_path }}/ngninx.service", owner: "root" }

  - name: Template a file to Config/Nginx 
    shell: |
      sed -i "/#gzip/a\/include host\/*.conf;" {{ redmine_nginx_home }}/conf/nginx.conf
      sed -i "/charset/c\charset utf-8;" {{ redmine_nginx_home }}/conf/nginx.conf

  - name: Restart service Nginx, in all cases
    ansible.builtin.service:
      name: nginx
      state: restarted
